USE INVENTORY;

SELECT * FROM SUPPLIER;

CREATE TABLE PRODUCT ( PID CHAR(5) NOT NULL PRIMARY KEY, PDESC VARCHAR(50) NOT NULL, 
PRICE INT CHECK(PRICE > 0), CATEGORY VARCHAR(5) CHECK ( CATEGORY IN ('IT','HA','HC')),
SID CHAR(5) REFERENCES SUPPLIER(SID));

SELECT * FROM PRODUCT;

CREATE TABLE CUST ( CID CHAR(5) NOT NULL PRIMARY KEY, CNAME VARCHAR(20) NOT NULL,
ADDRESS VARCHAR(60) NOT NULL,CITY VARCHAR(20) NOT NULL, PHONE VARCHAR(15) NOT NULL, EMAIL VARCHAR(25) NOT NULL,
DOB DATE CHECK ( DOB < '01-JAN-2000'));

SELECT * FROM CUST;


CREATE TABLE ORDERS ( OID CHAR(5) NOT NULL PRIMARY KEY, ODATE DATE , PID CHAR(5) REFERENCES  PRODUCT(PID),
CID CHAR(5) REFERENCES CUST(CID), OQTY INT CHECK(OQTY >=1));

SELECT * FROM ORDERS;

CREATE TABLE STOCK ( PID CHAR(5) REFERENCES PRODUCT(PID), SQTY INT CHECK (SQTY >= 0), 
ROL INT CHECK(ROL >0), MOQ INT CHECK(MOQ >=5));

SELECT * FROM STOCK;
USE INVENTORY;

SELECT * FROM SUPPLIER;

INSUPPLIER 'APOLLO HOSPITALS PVT. LTD.','BLOCK G CONNAUGHT PLACE','DELHI','897643290','CARE@APOLLO.CO.IN';


CREATE SEQUENCE S2
AS INT
START WITH 1
INCREMENT BY 1;

CREATE PROCEDURE INPRODUCT @PD AS varchar(50),	@PP AS INT, @PC AS VARCHAR(5) , @SI AS CHAR(5)
AS 
  BEGIN 
  DECLARE @I AS INT;
  DECLARE @PID AS CHAR(5);
  SET @I = NEXT VALUE  FOR S2;
  IF @I<10 
  SET @PID = CONCAT('P000',@I);
  ELSE IF  @I<100
  SET @PID = CONCAT('P00',@I);
  ELSE IF @I< 1000
  SET @PID = CONCAT('P0',@I);
  ELSE IF @I<10000
  SET @PID = CONCAT('P',@I)
  ELSE 
  SET @PID = 'NA';
INSERT INTO PRODUCT 
VALUES(@PID, @PD , @PP ,@PC , @SI);
SELECT * FROM PRODUCT;
END;

INPRODUCT 'DELL OPTICAL MOUSE - MS116 BLACK',350,'IT','S0001';

DROP PROCEDURE INPRODUCT;

DELETE FROM PRODUCT;

CREATE SEQUENCE S3
AS INT
START WITH 1
INCREMENT BY 1;

CREATE PROCEDURE INCUST @CN AS VARCHAR(20),@CA AS VARCHAR(60) , @CC AS VARCHAR(20) , @CP AS VARCHAR(15) , @CE AS VARCHAR(25) , @CDOB AS DATE
AS 
  BEGIN 
  DECLARE @I AS INT;
  DECLARE @CID AS CHAR(5);
  SET @I = NEXT VALUE  FOR S3;
  IF @I<10 
  SET @CID = CONCAT('C000',@I);
  ELSE IF  @I<100
  SET @CID = CONCAT('C00',@I);
  ELSE IF @I< 1000
  SET @CID = CONCAT('C0',@I);
  ELSE IF @I<10000
  SET @CID = CONCAT('C',@I)
  ELSE 
  SET @CID = 'NA';
INSERT INTO CUST
VALUES(@CID, @CN , @CA ,@CC , @CP , @CE , @CDOB);
SELECT * FROM CUST;
END;

DROP PROCEDURE INCUST;

DELETE FROM CUST;

INCUST 'VIJAY KUMAR', ' B-1/7 PLOT NO 7 BLOCK B-1 547 NEAR LEELA HOSPITAL','NEW DELHI', '9654320007','VIJAY9988@GMAIL.COM','10-MAR-1978';
SELECT * FROM PRODUCT;

CREATE PROCEDURE INSTOCK( @PID AS CHAR(5), @SQ AS INT , @SROL AS INT , @SMOQ AS INT )
AS 
BEGIN 
 INSERT INTO STOCK
 VALUES ( @PID , @SQ , @SROL , @SMOQ);
 SELECT * FROM STOCK;
END;

INSTOCK 'P0001','250','25','100';

SELECT * FROM PRODUCT;

CREATE SEQUENCE S4
AS INT
START WITH 1
INCREMENT BY 1;

CREATE PROCEDURE INORDER ( @ODATE AS DATE,@PID AS CHAR(5) , @CID AS CHAR(5) , @OQTY AS INT ) 
AS 
  BEGIN 
  DECLARE @I AS INT;
  DECLARE @OID AS CHAR(5);
  SET @I = NEXT VALUE  FOR S4;
  IF @I<10 
  SET @OID = CONCAT('O000',@I);
  ELSE IF  @I<100
  SET @OID = CONCAT('O00',@I);
  ELSE IF @I< 1000
  SET @OID = CONCAT('O0',@I);
  ELSE IF @I<10000
  SET @OID = CONCAT('O',@I)
  ELSE 
  SET @OID = 'NA';
INSERT INTO ORDERS
VALUES(@OID, @ODATE , @PID ,@CID , @OQTY);
SELECT * FROM ORDERS;
END;

CREATE TABLE BILL ( OID CHAR(5) , ODATE DATE , CNAME VARCHAR(25),ADDRESS VARCHAR(60), PHONE VARCHAR(15), PDESC VARCHAR(50),
PRICE INT, OQTY INT, AMT INT );

SELECT * FROM BILL;

CREATE TRIGGER TR_IN_ORD
ON ORDERS FOR INSERT
AS
BEGIN
SET NOCOUNT ON ;
DECLARE @QR AS INT; 
DECLARE @QS AS INT;
DECLARE @OI AS CHAR(5);
DECLARE @OD AS DATE;
DECLARE @CN AS VARCHAR(25);
DECLARE @AD AS VARCHAR(60);
DECLARE @PH AS VARCHAR(15);
DECLARE @PD AS VARCHAR(50);
DECLARE @P AS INT;
DECLARE @AM AS INT;
SET @QR = ( SELECT OQTY FROM INSERTED);
SET @QS = ( SELECT SQTY FROM STOCK WHERE PID = (SELECT PID FROM INSERTED));
SET @OI = (SELECT OID FROM INSERTED)
SET @OD = (SELECT ODATE FROM INSERTED);
SET @CN = (SELECT CNAME FROM CUST WHERE CID = (SELECT CID FROM INSERTED));
SET @AD = ( SELECT ADDRESS FROM CUST WHERE CID = (SELECT CID FROM INSERTED));
SET @PH = (SELECT PHONE FROM CUST WHERE CID = (SELECT CID FROM INSERTED));
SET @PD = ( SELECT PDESC FROM PRODUCT WHERE PID = (SELECT PID FROM INSERTED));
SET @P = ( SELECT PRICE FROM PRODUCT WHERE PID = (SELECT PID FROM INSERTED));
SET @AM = @QR * @P;

IF @QS > @QR
  BEGIN
      UPDATE STOCK SET SQTY = SQTY-@QR WHERE PID = (SELECT PID FROM INSERTED);
	  INSERT INTO BILL VALUES ( @OI , @OD , @CN , @AD ,@PH , @PD , @P , @QR , @AM);
	  COMMIT;
  END;
ELSE  ROLLBACK;
END;

INORDER '25-SEP-2022' , 'P0001' , 'C0001' , 50 ;


INPRODUCT'ONE PLUS Y SERIRS 40" FULL HD LED SMART ANROID TV ',19000,'HA','S0005';

INSTOCK 'P0002', 25 , 5 , 10;

CREATE TRIGGER TR_DEL_PROD
ON PRODUCT FOR DELETE
AS
BEGIN 
     DELETE FROM STOCK WHERE PID = (SELECT PID FROM DELETED);
END;

DROP
DELETE FROM PRODUCT WHERE PID ='P0002';

DROP TRIGGER TR_DEL_PROD;

CREATE TRIGGER TR_UP_ORD
ON ORDERS FOR UPDATE
AS 
BEGIN 
 DECLARE @X AS INT;
 DECLARE @Y AS INT;
 SET @X = (SELECT OQTY FROM ORDERS WHERE OID = (SELECT OID FROM INSERTED));
 SET @Y = (SELECT PRICE FROM PRODUCT WHERE PID = (SELECT PID FROM INSERTED));
 UPDATE STOCK SET SQTY = SQTY + (SELECT OQTY FROM DELETED) - (SELECT OQTY FROM INSERTED)
 WHERE PID = (SELECT PID FROM INSERTED);
 UPDATE BILL SET OQTY = (SELECT OQTY FROM INSERTED) WHERE OID = (SELECT OID FROM INSERTED);
 UPDATE BILL SET AMT =  @X * @Y ;
 END;

 DROP TRIGGER TR_UP_ORD;

 UPDATE ORDERS SET OQTY = 60
 WHERE OID = 'O0001';


SELECT * FROM SUPPLIER;

SELECT * FROM ORDERS;

SELECT * FROM STOCK;

SELECT * FROM BILL;

SELECT * FROM PRODUCT;

SELECT * FROM CUST;

SELECT * FROM BILL;



